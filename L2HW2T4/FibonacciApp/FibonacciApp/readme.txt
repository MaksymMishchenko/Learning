Задание 4
Создайте проект по шаблону "Console Application". Создайте метод с именем «private static double
FindLastFibonacciNumber(int number)». Метод должен найти и вернуть последнее число из
последовательности Фибоначчи. Для нахождения последнего числа из последовательности
Фибоначчи в тело метода вставить следующий код:
Func<int, double> fib = null;
fib = (x) => x > 1 ? fib(x - 1) + fib(x - 2) : x;
return fib.Invoke(number);
Даже, если вы считаете, что этот код недостаточно оптимизирован, все равно нужно
использовать его. В этом и смысл, что с помощью такого решения, последовательность числа
Фибоначчи будет находится намного дольше и с более сильной затратой ресурсов. Поэтому, вам
нужно вызвать из метода Main этот метод в контексте задачи. Но так как эта операция займет
много времени, вам нужно использовать флаг TaskCreationOptions.LongRunning, чтобы задача
выполнялась в контексте потока выполнения Thread и не занимала потоки из пула. Результат
асинхронной задачи необходимо вывести на экран консоли. Сделайте это с помощью
продолжения.

Решение:
-1. Создать метод в классе Program;
-2. Запустить метод FindLastFibonacciNumber() в контексте вторичного потока с помощью создания экземпляра класса Task;
-3. На возвращаемой задачи вызвать метод ContinueWith() и вывести результат на экран с помощью свойства Result.
-4. В методе ContinueWith() вторым параметром передать флаг-перечисление TaskCreationOptions.LongRunning.