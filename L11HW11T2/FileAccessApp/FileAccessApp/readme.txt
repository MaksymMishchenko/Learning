Задание 2
Создайте консольное приложение, которое в различных потоках сможет получить доступ к 2-м
файлам. Считайте из этих файлов содержимое и попытайтесь записать полученную
информацию в третий файл. Чтение/запись должны осуществляться одновременно в каждом
из дочерних потоков. Используйте блокировку потоков для того, чтобы добиться корректной
записи в конечный файл.

Решение:
+1. Создать класс-обьект блокировки BlockObject в котором симитировать работу методов Monitor.Enter() и Monitor.Exit:
 + создать переменную типа int block, int wait, конструктор и два метода Enter() и Exit();
 + проинициализировать переменную wait в конструкторе значением аргумента;
  + метод Enter():
   + создать переменну result, в которой сравнивать текущее состояние переменной block вызвав метод на классе-объекте Interlocked.CompareExchange();
   + если переменная result равна 0, тогда не заходим в цикл while;
   + если переменная result равна 1, тогда заходим в цикл while вызываем метод Sleep на классе-обьекте Thread и передаем переменную wait;
   + переменной result присваиваем возвращаемое значение метода CompareExchange(), которая будет равна 0 после вызова метода Exit() 
  + метод Exit():
   + присваиваем значение переменной _block = 0 вызвав метод на классе-объекте Interlocked.Exchange() - высвобождая поток;
+2. Создать класс ThreadManager и реализовать интерфейс IDisposable:
 + создать переменную типа BlockObject и проинициализировать ее значение в конструкторе;
 + вызвать метод Enter объекта блокировки в конструкторе;
 + в методе Dispose() вызвать метод Exit() объекта-блокировки;
+3. Создать два текстовых документа, открыть в  стриме используя класс FileStream, StreamWriter для записи в файл, StreamReader для чтения из файла;
+4. Создать метод ReadWriteFiles, который запустить в контексте вторичных потоков:
 + в конструкции using создать новый объект блокировки и обратиться к двум файлам на чтение;
 + присовить переменной string Text возвращаемое значение методом ReadToEnd();
 + создать экземпляр класса Random и дать время поработать потокам, которые считывают информацию с файлов;
 + создать еще одну конструкцию using, в теле которой записать считанные значения из 2-х файлов в третий файл;
+5. В теле метода Main создать цикл на 2 потока и запустить метод ReadWriteFiles();  